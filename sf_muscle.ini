[Database]

#
# Name of database to connect to
db=SignUpWiki
#db=AnglistikAP2

#
# Credentials of postgres db-user
# used to connect to db
db_user=postgres
db_pass=galavastik

#
# Timezone is problematic, see
# https://github.com/sfackler/rust-tokio_postgres/issues/147
timezone=Europe/Berlin

[Webservice]
#
# address is important here also for reload
# and shutdown: the reload and shutdown 
# commands are only interpreted if they
# come from this ip address.
# HTTPS-Port to open
#addr=147.142.232.252
addr=127.0.0.1
port=8443

#
# certificate for https connection
# and certificate's password (leave
# empty if it has no password)
cert_file=identity.pfx
cert_pass=changeit

# 
# Timout abandons the connection, which
# becomes necessary due to 'chunked' 
# reading of streams without eof marker. These
# timeouts are logged as errors; see
# main.rs for details and/or experiment
# with plaudisle values
server_read_timeout_ms=100
server_read_chunksize=16384

#
# File containing OpenAPI 3 specification
# (with special extensions) defining
# the routes from https <-> postgres
#api_conf=openapi_try.json
api_conf=sf.json


[Authorization]

# 
# The token specified in the 
# request header as
# Authorization: Bearer TOKEN
# is handed to postgres as 
# a locally set variable of 
# this name (valid for the 
# transaction only):
pg_token_name=request.pg_api_muscle.token

#
# The shared secret is needed here
# if you wish pg_api_muscle to check 
# the token's validity and/or to 
# set claims of the token as local
# variables for the transaction in 
# postgres
pg_token_secret=5JkCkNsRw7Iww16OILugtNso8UCzXluo

# 
# Token-claim variables are set 
# in postgres with this pre-fix:
# if the token's custom claim 
# contains "employee_id=3", and 
# OpenAPI configures pg_api_muscle
# to set this as "e_id", then
# SET LOCAL <pg_setvar_prefix>.e_id=3;
# is called on the database specified above.
pg_setvar_prefix=pg_api_muscle
