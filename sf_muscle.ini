[Database]

#
# Name of database to connect to
db=SignUpWiki
#db=AnglistikAP2

#
# Credentials of postgres db-user
# used to connect to db
db_user=postgres
db_pass=galavastik

#
# Timezone is problematic, see
# https://github.com/sfackler/rust-tokio_postgres/issues/147
timezone=Europe/Berlin

[Webservice]
#
# address is important here also for reload
# and shutdown: the reload and shutdown 
# commands are only interpreted if they
# come from this ip address.
# HTTPS-Port to open
#addr=147.142.232.252
addr=127.0.0.1
#port=8443
port=8080

#
# switch ssl of
# https=false will, obviously, ignore
# values of cert_file and password.
# if pg_api_muscle is used behind a 
# reverse proxy (just for db communication)
# https may be dispensible.
https=false

# 
# experimental: only process requests coming
# from this ip address.
# This (like https) is for the use behind a 
# reverse proxy.
# Set to 0.0.0.0 to allow all
client_ip_allow=0.0.0.0
# client_ip_allow=227.0.0.1

#
# certificate for https connection
# and certificate's password (leave
# empty if it has no password)
cert_file=identity.pfx
cert_pass=changeit

# 
# Timout abandons the connection, which
# becomes necessary due to 'chunked' 
# reading of streams without eof marker. These
# timeouts are logged as errors; see
# main.rs for details and/or experiment
# with plaudisle values
server_read_timeout_ms=100
server_read_chunksize=16384

#
# File containing OpenAPI 3 specification
# (with special extensions) defining
# the routes from https <-> postgres
#api_conf=openapi_try.json
api_conf=sf.json

#
# Static files can be served from a 
# designated folder (and its subfolders)
static_files_folder=static/

[Authorization]

# 
# The token specified in the 
# request header as
# Authorization: Bearer TOKEN
# is handed to postgres as 
# a locally set variable of 
# this name (valid for the 
# transaction only):
pg_token_name=request.pg_api_muscle.token

#
# The shared secret is needed here
# if you wish pg_api_muscle to check 
# the token's validity and/or to 
# set claims of the token as local
# variables for the transaction in 
# postgres
pg_token_secret=5JkCkNsRw7Iww16OILugtNso8UCzXluo

# 
# Token-claim variables are set 
# in postgres with this pre-fix:
# if the token's custom claim 
# contains "employee_id=3", and 
# OpenAPI configures pg_api_muscle
# to set this as "e_id", then
# SET LOCAL <pg_setvar_prefix>.e_id=3;
# is called on the database specified above.
pg_setvar_prefix=pg_api_muscle

[Service]
# 
# Should https://site?param=eq.5 translate
# to `param = 5`?
# If set to true, you can use
# =eq., =gt., =lt. BUT NOT param=5
# This applies only for query parameters,
# not for JSON payloads
api_use_eq_syntax_on_url_parameters=true

# 
# If there's a request for a static
# resource that cannot be found, return 
# this page as error msg:
# If you just want "Sorry, requested resource 
# not found", set 
# static_404_default=none
static_404_default=./static/sf/404.html

#
# Dynamic resources (i.e. requests made to the 
# database) contain quite detailed error 
# messages when they go wrong.
#
# In order for the details (valuable for 
# debugging purposes but maybe too talkative
# for production), set dynamic_err to default:
dynamic_err=default
#
# If you would rather return a less
# telling error message, specify 
# a response string here
# If this response starts with a
# bracket, it will be delivered
# as is. You can also enter a path
# to an error page -- 
# dynamic_err=./static/sf/404_dyn.html
# dynamic_err={application: "sf", version: "0.1", error:"backend error"}

#
# If the request for a static ressource
# ends in a slash (i.e. is a request for 
# a folder), what page should be displayed?
# (Set to none means that such requests will 
# result in a 404)
# index_file=none
index_file=index.html

